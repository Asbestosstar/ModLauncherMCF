import net.minecraftforge.gradleutils.PomUtils

plugins {
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'java-library'
    id 'eclipse'
    id 'net.minecraftforge.gradleutils' version '2.+'
    id 'de.jjohannes.extra-java-module-info' version '0.11'
    id 'maven-publish'
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(16)
    withSourcesJar()
}

group = 'net.minecraftforge'
version = gradleutils.tagOffsetVersion
logger.lifecycle('Version: ' + version)

repositories {
    mavenCentral()
    maven gradleutils.forgeMaven
    mavenLocal()
}

dependencies {
    api(libs.bundles.asm)
    
    implementation(libs.securemodules)
    implementation(libs.bundles.log4j.runtime)
    implementation(libs.jopt.simple)
    
    compileOnly(libs.nulls)
    
    annotationProcessor(libs.log4j.core)
}

extraJavaModuleInfo {
    failOnMissingModuleInfo = false
    automaticModule('jopt-simple-5.0.4.jar', 'jopt.simple')
}

license {
    header = file("LICENSE-header.txt")
}

jar {
    manifest {
		attributes([
            'Specification-Title':    'modlauncher',
			'Specification-Vendor':   'Forge Development LLC',
			'Specification-Version':  gradleutils.gitInfo.tag,
			'Implementation-Title':   project.name,
			'Implementation-Version': project.version,
			'Implementation-Vendor':  'Forge Development LLC'
		]  as LinkedHashMap, 'cpw/mods/modlauncher/api/')
		
		attributes([
            'Specification-Title':    'modlauncherserviceapi',
			'Specification-Vendor':   'Forge Development LLC',
			'Specification-Version':  gradleutils.gitInfo.tag,
			"Implementation-Title":   project.name,
			'Implementation-Version': project.version,
			'Implementation-Vendor':  'Forge Development LLC'
		]  as LinkedHashMap, 'cpw/mods/modlauncher/serviceapi/')
	}
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:unchecked'
}

compileJava {
    options.javaModuleVersion = project.version.toString()
    options.javaModuleMainClass = 'cpw.mods.modlauncher.Launcher'
}

publishing {
    publications.register('mavenJava', MavenPublication) {
        from components.java
        artifactId = 'modlauncher'
        pom {
            name = 'Mod Launcher'
            description = 'Common ModLauncher framework'
            url = 'https://github.com/MinecraftForge/ModLauncher'
            PomUtils.setGitHubDetails(pom, 'ModLauncher')
            
            license PomUtils.Licenses.LGPLv2_1
            developers {
                developer PomUtils.Developers.cpw
                developer PomUtils.Developers.LexManos
            }
        }
    }
    repositories {
        maven gradleutils.publishingForgeMaven
    }
}

// Hack eclipse into knowing that the gradle deps are modules
eclipse.classpath {
    containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
    file.whenMerged { entries.findAll { it.kind == 'lib' || it.path == 'org.eclipse.buildship.core.gradleclasspathcontainer' }.each { it.entryAttributes['module'] = 'true' } }
}

allprojects {
    ext.VALID_VMS = [
        'Adoptium':  [16, 17, 18, 19, 20, 21],
        'Amazon':    [16, 17, 18, 19, 20, 21],
        'Azul':      (16..21),
        'BellSoft':  (16..21),
        'Graal_VM':  [16, 17,     19, 20, 21],
        'IBM':       [16, 17, 18, 19, 20    ],
        'Microsoft': [16, 17,             21],
        'Oracle':    (16..21),
        'SAP':       (16..20)
    ]
    //ext.VALID_VMS = [ 'Adoptium':  [16] ]
}