pluginManagement {
    repositories {
        gradlePluginPortal()
        maven { url = 'https://maven.minecraftforge.net/' }
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.7.0'
}

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('asm', '9.6')
            library('asm',         'org.ow2.asm', 'asm'        ).versionRef('asm')
            library('asm-tree',    'org.ow2.asm', 'asm-tree'   ).versionRef('asm')
            library('asm-commons', 'org.ow2.asm', 'asm-commons').versionRef('asm')
            bundle('asm', ['asm', 'asm-tree', 'asm-commons'])
			
			version('junit', '5.10.0')
			library('junit-api', 'org.junit.jupiter', 'junit-jupiter-api').versionRef('junit')
			library('junit-engine', 'org.junit.jupiter', 'junit-jupiter-engine').versionRef('junit')
			library('junit-platform-launcher', 'org.junit.platform:junit-platform-launcher:1.10.0')
			bundle('junit-runtime', ['junit-engine', 'junit-platform-launcher']) // Force Gradle to load the JUnit Platform Launcher from the module-path
            
            library('nulls', 'org.jetbrains:annotations:23.0.0')
			library('unsafe', 'net.minecraftforge:unsafe:0.9.2')
            library('securemodules', 'net.minecraftforge:securemodules:2.2.2')
            library('jopt-simple', 'net.sf.jopt-simple:jopt-simple:5.0.4')
            
            version('log4j', '2.17.1')
            library('log4j-api',  'org.apache.logging.log4j', 'log4j-api' ).versionRef('log4j')
            library('log4j-core', 'org.apache.logging.log4j', 'log4j-core').versionRef('log4j')
            bundle('log4j-runtime', ['log4j-api', 'log4j-core'])
            
            version('powermock', '2.0.9')
            library('powermock-core', 'org.powermock', 'powermock-core').versionRef('powermock')
            library('powermock-reflect', 'org.powermock', 'powermock-reflect').versionRef('powermock')
            bundle('powermock', ['powermock-core', 'powermock-reflect'])
        }
    }
}

rootProject.name = "ModLauncher"

include 'ml-jmh'
include 'ml-test'
include 'ml-test-jar'